// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType{
  MASTER
  DEALER
  ADMIN
  USER
}

model User {
  user_id          String      @id @unique @default(uuid())
  login            String
  password         String
  userType         UserType
  admFarms            AdminsOnFarms[]
  dealerFarms         DealersOnFarms[]
  usersFarms          UserOnFarms[]
  @@map("users")
}

model Farm{
  farm_id    String      @id @unique @default(uuid())
  farm_name  String      @unique  
  farm_city  String
  farm_lat   Float 
  farm_lng   Float
  owner       String
  created_by  String
  updated_by  String?

  admins            AdminsOnFarms[]    
  dealers           DealersOnFarms[]
  users             UserOnFarms[]

  @@map("farms")    
}

// Relation Many to Many Users -> Farms
model AdminsOnFarms {
  admin   User          @relation(fields: [adminId], references: [user_id], onDelete: Cascade )
  adminId  String

  farms   Farm          @relation(fields: [farmId], references: [farm_id], onDelete: Cascade)
  farmId  String 


  @@id([adminId, farmId])       
}

model DealersOnFarms {
  dealer   User          @relation(fields: [dealerId], references: [user_id])
  dealerId  String

  farms   Farm          @relation(fields: [farmId], references: [farm_id])
  farmId  String 

  @@id([dealerId, farmId])       
}

model UserOnFarms {
  user   User          @relation(fields: [userId], references: [user_id])
  userId  String

  farms   Farm          @relation(fields: [farmId], references: [farm_id])
  farmId  String 

  @@id([userId, farmId])       
}